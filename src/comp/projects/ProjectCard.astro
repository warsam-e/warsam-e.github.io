---
import type { Project, ProjectLinkType } from "$lib/projects/types";

interface Props {
  project: Project;
}

const { project } = Astro.props;

const { label, desc, tags, links } = project;

function format_website_link(url: string) {
  if (url.startsWith("http")) return url;
  const origin = import.meta.env.VITE_ORIGIN;
  if (!origin) throw new Error("VITE_ORIGIN is not defined");
  const uri = new URL(url, origin);
  return uri.href;
}

function format_href(type: ProjectLinkType, href: string) {
  if (type === "repo") return `https://github.com/warsam-e/${href}`;
  return format_website_link(href);
}

function format_link_icon(type: ProjectLinkType) {
  if (type === "repo") return "logo_github";
  return "link";
}
---

<div class="project">
  <div class="content">
    <div class="meta">
      <div class="label">{label}</div>
      <div class="tags">
        {tags.map((tag) => <span class="tag">{tag}</span>)}
      </div>
      <div class="desc">{desc}</div>
    </div>
    <div class="links">
      {
        links.map(({ type, href }) => (
          <a
            href={format_href(type, href)}
            target="_blank"
            rel="noopener noreferrer"
            class="hover_effect"
          >
            <i class="f7-icons">{format_link_icon(type)}</i>
          </a>
        ))
      }
    </div>
  </div>
</div>

<style lang="scss">
  .tags {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    > .tag {
      height: 1.2rem;
      font-weight: 500;
      font-size: 0.7rem;
      padding: 0 0.8rem;
      color: rgba(#007aff, 0.8);
      background: rgba(#007aff, 0.1);
      border-radius: calc(1.2rem / 4.4);
      box-shadow: inset 0 0 0 1px rgba(#007aff, 0.05);
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }

  .project {
    color: inherit;
    text-decoration: none;

    gap: 0.8rem;
    &:not(:last-child) {
      border-bottom: 1px solid rgba(#000, 0.05);
      @media (prefers-color-scheme: dark) {
        border-color: rgba(#fff, 0.05);
      }
    }
    > .content {
      padding: 0 0 1rem;
      display: flex;
      align-items: center;
      justify-content: space-between;
      > .meta {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        > .label {
          font-size: 1.2rem;
          font-weight: 500;
        }
        > .href {
          color: #007aff;
          opacity: 0.8;
          font-size: 1rem;
        }

        > .desc {
          opacity: 0.3;
          font-size: 1rem;
          font-weight: 500;
        }
      }
      > .links {
        display: flex;
        align-items: center;
        gap: 1rem;
        > a {
          color: inherit;
          opacity: 0.8;
          > i {
            font-size: 2rem;
          }
        }
      }
    }
  }

  @media only screen and (max-width: 820px) {
    .project {
      > .content {
        flex-direction: column;
        align-items: flex-end;
        gap: 1rem;
        > .links {
          > a {
            > i {
              font-size: 1.5rem;
            }
          }
        }
      }
    }
  }
</style>
