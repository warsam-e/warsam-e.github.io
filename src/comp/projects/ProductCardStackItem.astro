---
import Logo from "$comp/Logo.astro";
import { technology, type TechnologyLabel } from "$lib/technologies";

interface Props {
  label: TechnologyLabel;
}

const tech = technology(Astro.props.label);
const { label, icon, vibrant, invert_bg } = tech;
---

<div
  class=`stack_item hover_effect ${invert_bg ? ' invert_bg' : ''}`
  onclick=`document.getElementById('${tech.label}')?.scrollIntoView({ behavior: 'smooth' })`
>
  <div class="content">
    <Logo name={icon} size="0.8rem" />

    <div class="label">{label}</div>
  </div>
  <div class=`bg` style=`--vibrant: ${vibrant};`></div>
</div>

<style lang="scss">
  .stack_item {
    color: inherit;
    height: 1.6rem;
    font-weight: 500;
    padding: 0 0.6rem;
    border-radius: calc(1.6rem / 4.4);
    box-shadow: inset 0 0 0 1px rgba(#000, 0.05);
    display: flex;
    align-items: center;
    position: relative;
    overflow: hidden;
    > .bg {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: var(--vibrant);
      opacity: 0.2;
    }
    &.dim_bg {
      > .bg {
        border-radius: inherit;
        box-shadow: inset 0 0 0 1px rgba(#000, 0.05);
      }
    }

    > .content {
      z-index: 1;
      height: 100%;
      display: flex;
      align-items: center;
      gap: 0.4rem;

      > .label {
        opacity: 0.7;
        font-size: 0.6rem;
        font-weight: 700;
      }
    }
  }

  @media (prefers-color-scheme: dark) {
    .stack_item {
      box-shadow: inset 0 0 0 1px rgba(#fff, 0.05);

      &.dim_bg {
        box-shadow: inset 0 0 0 1px rgba(#fff, 0.1);
        > .bg {
          opacity: 0.1;
        }
      }
      &[data-invert="invert-both"],
      &[data-invert="invert-bg"] {
        > .bg {
          filter: invert(1);
        }
      }
    }
  }
</style>
